#!/usr/bin/env bash
# spl-compile -- Compiles a Spannerlog program, and makes preparations for running it
set -eu -o pipefail

# check if all necessary files are present
if [[ ! -e app.spl || ! -e db.url ]]; then
    print-error "Not inside a Spannerlog application: app.spl and db.url should be all present in a parent directory"
fi

logging-with-ts "Deleting old target directory and creating new one"
rm -rf target
mkdir target
mkdir target/udf
mkdir target/input

schema=()
ln -s "../db.url" "target/db.url"
mkdir -p edb
printf "column1\n2" > edb/dummy.csv
for f in edb/*; do	
  (tail -n +2 $f > target/input/$(basename $f))
done
# ln -s "../edb" "target/input"
(extract-edb-schema.py edb) > target/edb.schema.json
schema+=(-edb target/edb.schema.json)

if [[ -d ief ]]; then
    (extract-ief-schema.py ief) > target/ief.schema.json
    schema+=(-ief target/ief.schema.json)
# else
#   echo "[INFO] 'ief' folder does not exist" >&2
fi

logging-with-ts "Collecting schemas:"
logging-with-ts "  ${schema[*]:-}"

cmd="java -jar $SPL_HOME/spannerlog-1.0-SNAPSHOT.jar -program app.spl ${schema[*]:-}"
logging-with-ts "Compiling program:"
logging-with-ts " $cmd"
($cmd 2>&1>&3 | print-error) 3> target/compiled.spl.json

(compile-to-ddlog.py target/compiled.spl.json) > target/app.ddlog           # generate ddlog program
(compile-rgx-to-sql.py target/compiled.spl.json) > target/rgx.sql           # compile regex formulas into an sql script
(compile-exec-plan-to-bash.py target/compiled.spl.json) > target/run.sh     # generate execution script

cd target
chmod -R 777 .* 
deepdive compile                            # compile ddlog program
deepdive db init                            # initialize databases
deepdive do process/init/app > /dev/null    # initialize ddlog app

# add procedural code to postgres
url=$(eval echo "$(cat db.url)")
db=${url##*/}
psql -d $db -c "CREATE EXTENSION plpythonu" | logging-with-ts
logging-with-ts "Importing built-in IEFs"
psql -d $db -f "$SPL_HOME/lib/ner.sql" | logging-with-ts        # always?
psql -d $db -f "$SPL_HOME/lib/sentence.sql" | logging-with-ts
psql -d $db -f "$SPL_HOME/lib/lower.sql" | logging-with-ts
if [[ -e rgx.sql ]] && [ -s rgx.sql ]; then
    logging-with-ts "Importing auto-generated regex formulas"
    psql -d $db -f rgx.sql | logging-with-ts
fi

cd ..

# Compilation completed. Ready to run.
